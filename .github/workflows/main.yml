name: Main CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ubuntu-latest-aurora-run-integration-tests:
    concurrency: IntegrationTests
    name: 'Run Integration Tests'
    runs-on: ubuntu-latest
    steps:
      - name: 'Clone Repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 50
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 8
      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: mysql_jdbc_main_ci
          role-duration-seconds: 21600
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: 'Run Integration Tests'
        run: |
          ./gradlew --no-parallel --no-daemon test-integration-docker
        env:
          TEST_DB_CLUSTER_IDENTIFIER: ${{ secrets.TEST_DB_CLUSTER_IDENTIFIER }}-${{ github.run_id }}
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      - name: 'Archive junit results'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'junit-report-integration-tests'
          path: build/reports/tests/
          retention-days: 5

  ubuntu-latest-aurora-run-community-tests:
    name: 'Run Community Tests'
    runs-on: ubuntu-latest
    steps:
      - name: 'Clone Repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 50
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 8
      - name: 'Run Community Tests'
        run: |
          ./gradlew --no-parallel --no-daemon test-community-docker
      - name: 'Archive junit results'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'junit-report-community-tests'
          path: build/reports/tests/
          retention-days: 5
